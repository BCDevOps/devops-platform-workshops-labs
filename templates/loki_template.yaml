kind: Template
apiVersion: v1
labels:
  template: loki-template
objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${LOKI_SERVICE_NAME}
      namespace: 4zq6uj-mitovskaol-ocp201-tst-dev
      labels:
        app: loki
        chart: loki-0.16.0
        release: ${LOKI_SERVICE_NAME}
        heritage: Tiller
    data:
      loki.yaml: YXV0aF9lbmFibGVkOiBmYWxzZQpjaHVua19zdG9yZV9jb25maWc6CiAgbWF4X2xvb2tfYmFja19wZXJpb2Q6IDAKaW5nZXN0ZXI6CiAgY2h1bmtfYmxvY2tfc2l6ZTogMjYyMTQ0CiAgY2h1bmtfaWRsZV9wZXJpb2Q6IDNtCiAgY2h1bmtfcmV0YWluX3BlcmlvZDogMW0KICBsaWZlY3ljbGVyOgogICAgcmluZzoKICAgICAga3ZzdG9yZToKICAgICAgICBzdG9yZTogaW5tZW1vcnkKICAgICAgcmVwbGljYXRpb25fZmFjdG9yOiAxCmxpbWl0c19jb25maWc6CiAgZW5mb3JjZV9tZXRyaWNfbmFtZTogZmFsc2UKICByZWplY3Rfb2xkX3NhbXBsZXM6IHRydWUKICByZWplY3Rfb2xkX3NhbXBsZXNfbWF4X2FnZTogMTY4aApzY2hlbWFfY29uZmlnOgogIGNvbmZpZ3M6CiAgLSBmcm9tOiAiMjAxOC0wNC0xNSIKICAgIGluZGV4OgogICAgICBwZXJpb2Q6IDE2OGgKICAgICAgcHJlZml4OiBpbmRleF8KICAgIG9iamVjdF9zdG9yZTogZmlsZXN5c3RlbQogICAgc2NoZW1hOiB2OQogICAgc3RvcmU6IGJvbHRkYgpzZXJ2ZXI6CiAgaHR0cF9saXN0ZW5fcG9ydDogMzEwMApzdG9yYWdlX2NvbmZpZzoKICBib2x0ZGI6CiAgICBkaXJlY3Rvcnk6IC9kYXRhL2xva2kvaW5kZXgKICBmaWxlc3lzdGVtOgogICAgZGlyZWN0b3J5OiAvZGF0YS9sb2tpL2NodW5rcwp0YWJsZV9tYW5hZ2VyOgogIHJldGVudGlvbl9kZWxldGVzX2VuYWJsZWQ6IGZhbHNlCiAgcmV0ZW50aW9uX3BlcmlvZDogMAo=
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${LOKI_SERVICE_NAME}-headless
      namespace: 4zq6uj-mitovskaol-ocp201-tst-dev
      labels:
        app: loki
        chart: loki-0.16.0
        release: ${LOKI_SERVICE_NAME}
        heritage: Tiller
    spec:
      clusterIP: None
      ports:
        - port: 3100
          protocol: TCP
          name: http-metrics
          targetPort: http-metrics
      selector:
        app: loki
        release: ${LOKI_SERVICE_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${LOKI_SERVICE_NAME}
      namespace: 4zq6uj-mitovskaol-ocp201-tst-dev
      labels:
        app: loki
        chart: loki-0.16.0
        release: ${LOKI_SERVICE_NAME}
        heritage: Tiller
      annotations:
        {}
    spec:
      type: ClusterIP
      ports:
        - port: 3100
          protocol: TCP
          name: http-metrics
          targetPort: http-metrics
      selector:
        app: loki
        release: ${LOKI_SERVICE_NAME}
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: ${LOKI_SERVICE_NAME}
      namespace: 4zq6uj-mitovskaol-ocp201-tst-dev
      labels:
        app: loki
        chart: loki-0.16.0
        release: ${LOKI_SERVICE_NAME}
        heritage: Tiller
      annotations:
        {}
    spec:
      podManagementPolicy: OrderedReady
      replicas: 1
      selector:
        matchLabels:
          app: loki
          release: ${LOKI_SERVICE_NAME}
      serviceName: ${LOKI_SERVICE_NAME}-headless
      updateStrategy:
        type: RollingUpdate
        
      template:
        metadata:
          labels:
            app: loki
            name: loki
            release: ${LOKI_SERVICE_NAME}
          annotations:
            checksum/config: b12d4c9894e82c9ae072913bbcf47c4e47cfaaab304e053f810801da4a76655e
            prometheus.io/port: http-metrics
            prometheus.io/scrape: "true"
            
        spec:
          serviceAccountName: default
            
          containers:
            - name: loki
              image: "grafana/loki:v0.3.0"
              imagePullPolicy: IfNotPresent
              args:
                - "-config.file=/etc/loki/loki.yaml"
              volumeMounts:
                - name: config
                  mountPath: /etc/loki
                - name: storage
                  mountPath: "/data"
                  subPath: 
              ports:
                - name: http-metrics
                  containerPort: 3100
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: /ready
                  port: http-metrics
                initialDelaySeconds: 45
                
              readinessProbe:
                httpGet:
                  path: /ready
                  port: http-metrics
                initialDelaySeconds: 45
                
              resources:
                {}
                
              securityContext:
                readOnlyRootFilesystem: true
              env:
          nodeSelector:
            {}
            
          affinity:
            {}
            
          tolerations:
            []
            
          terminationGracePeriodSeconds: 30
          volumes:
            - name: config
              secret:
                secretName: ${LOKI_SERVICE_NAME}
            - name: storage
              emptyDir: {}
parameters:
- description: The name of the OpenShift Service exposed for the database.
  displayName: Loki Service Name
  name: LOKI_SERVICE_NAME
  required: true
  value: loki

